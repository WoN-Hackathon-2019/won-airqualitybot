<!--
  ~ Copyright 2012  Research Studios Austria Forschungsges.m.b.H.
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean id="airQualityBot" class="won.bot.airquality.impl.AirQualityBot">
        <property name="taskScheduler" ref="taskScheduler"/>
        <property name="botContextWrapper" ref="botContextWrapper"/>
        <property name="atomProducer">
            <!-- since this bot does not create any atoms from other source, e.g rdf-files, mails etc, adding the NopAtomProducer will suffice, as it is never used (TODO does this hold for the airQualityBot as well?)-->
            <bean class="won.bot.framework.component.atomproducer.impl.NopAtomProducer"/>
        </property>

        <!--property name="nodeURISource" ref="nodeUriSourceRandom" /-->
        <property name="matcherNodeURISource" ref="matcherNodeURISource"/>
        <property name="matcherProtocolAtomServiceClient" ref="matcherProtocolAtomServiceClient"/>
        <property name="matcherProtocolMatcherService" ref="matcherProtocolMatcherServiceJMSBased"/>

        <property name="openAqApi">
            <bean class="won.bot.airquality.external.OpenAqApi">
                <constructor-arg name="apiUrl" value="${openaq.apiURL}"/>
                <constructor-arg name="countryCode" value="${openaq.countryCode:${openaq.allCountriesCode}}"/>
                <constructor-arg name="allCountriesCode" value="${openaq.allCountriesCode}"/>
            </bean>
        </property>
        <property name="limitedTestMode" value="${aqbot.limitedTestMode}"/>
        <property name="uriStorage" ref="atomUriStorage"/>

        <property name="trigger">
            <bean class="org.springframework.scheduling.support.PeriodicTrigger">
                <constructor-arg name="period" value="${aqbot.updateIntervalMs}"/>
                <constructor-arg name="timeUnit" value="MILLISECONDS"/>
                <property name="initialDelay" value="${aqbot.initialDelayMs}"/>
                <property name="fixedRate" value="false"/> <!-- fixed delay after completion -->
            </bean>
        </property>
    </bean>

    <bean id="botContextWrapper" class="won.bot.airquality.context.AirQualityBotContextWrapper">
        <constructor-arg name="botContext" ref="${botContext.impl}"/>
        <constructor-arg name="botName" value="${bot.name}"/>
    </bean>

    <bean id="atomUriStorage" class="won.bot.airquality.model.AtomUriStorage" destroy-method="commit">
        <constructor-arg name="uriStorageDirectory" value="${aqbot.atom.uri.storage.directory}"/>
    </bean>
</beans>
